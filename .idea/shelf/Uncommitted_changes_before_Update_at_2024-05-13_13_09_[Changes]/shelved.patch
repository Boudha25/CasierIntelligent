Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from Database import DatabaseManager\r\nfrom ConfigurationWindow import ConfigWindow\r\nfrom Cu48Communication import CU48Communication\r\nimport hashlib\r\nimport re\r\nimport tkinter as tk\r\nfrom tkinter import Menu, messagebox\r\nimport customtkinter as ctk  # Importer customTkinter au lieu de tkinter\r\nfrom twilio.rest import Client\r\nimport os\r\nfrom dotenv import load_dotenv\r\n\r\n\r\nclass Locker:\r\n    def __init__(self, locker_number, database_manager, password=\"\"):\r\n        \"\"\"Initialise un casier avec son numéro, son gestionnaire de base de données et un mot de passe facultatif.\"\"\"\r\n        self.locker_number = locker_number\r\n        self.password = hashlib.sha256(password.encode()).hexdigest() if password else \"\"\r\n        self.locked = False\r\n        self.database_manager = database_manager\r\n\r\n    def lock(self, password=\"\"):\r\n        \"\"\"Verrouille le casier avec un mot de passe.\"\"\"\r\n        # Vérifier que le mot de passe contient uniquement des chiffres et a une longueur entre 4 et 8 caractères\r\n        if password and password.isdigit() and 4 <= len(password) <= 8:\r\n            hashed_password = hashlib.sha256(password.encode()).hexdigest()\r\n            self.password = hashed_password\r\n            self.locked = True\r\n            # Mettre à jour le mot de passe dans la base de données\r\n            self.database_manager.update_password(self.locker_number, password)\r\n            # Mettre à jour l'état du casier dans la base de données\r\n            self.database_manager.update_locker_state(self.locker_number, True)\r\n            print(f\"État de verrouillage du casier {self.locker_number} mis à jour dans la base de données\")\r\n            return f\"Casier {self.locker_number} est verrouillé.\"\r\n        else:\r\n            return \"Mot de passe invalide. Le casier n'a pas été verrouillé.\"\r\n\r\n    def unlock(self, password=\"\"):\r\n        \"\"\"Déverrouille le casier avec un mot de passe.\"\"\"\r\n        if not self.locked:\r\n            return f\"Le casier {self.locker_number} est déjà déverrouillé.\"\r\n        elif hashlib.sha256(password.encode()).hexdigest() == self.database_manager.get_master_password():\r\n            # Si le mot de passe est le mot de passe maître, déverrouiller le casier\r\n            print(\"déverrouillé par le mot de passe maitre.\")\r\n            self.locked = False\r\n            self.database_manager.update_locker_state(self.locker_number, False)\r\n            return f\"Casier {self.locker_number} est déverrouillé.\"\r\n        elif hashlib.sha256(password.encode()).hexdigest() == self.password:\r\n            # Si le mot de passe correspond au mot de passe stocké dans le casier, déverrouiller le casier\r\n            print(\"déverrouillé par le mot de passe régulier.\")\r\n            self.locked = False\r\n            self.database_manager.update_locker_state(self.locker_number, False)\r\n            return f\"Casier {self.locker_number} est déverrouillé.\"\r\n        else:\r\n            return \"Mot de passe incorrect.\"\r\n\r\n    def is_locked(self):\r\n        \"\"\"Vérifie si le casier est verrouillé.\"\"\"\r\n        return self.locked\r\n\r\n\r\nclass LockerManager:\r\n    def __init__(self, numb_lockers, cu48_communication):\r\n        \"\"\"Initialise le gestionnaire de casiers avec le nombre de casiers,\r\n        la communication série CU48 et le gestionnaire de base de données.\"\"\"\r\n        self.locker_manager = None\r\n        self.lockers = {}\r\n        self.cu48_communication = cu48_communication\r\n        self.db_manager = db_manager  # Créez une instance de DatabaseManager\r\n        self.initialize_lockers(numb_lockers)\r\n\r\n    def initialize_lockers(self, numb_lockers):\r\n        \"\"\"Initialise les casiers en récupérant leurs états et mots de passe depuis la base de données.\"\"\"\r\n        for i in range(1, numb_lockers + 1):\r\n            # Récupérer l'état du casier depuis la base de données\r\n            locker_locked = self.db_manager.get_locker_state(i)\r\n            # Récupérer le mot de passe du casier depuis la base de données\r\n            locker_password = self.db_manager.get_password(i)\r\n            self.lockers[i] = Locker(i, self.db_manager)\r\n            if locker_locked is not None:\r\n                self.lockers[i].locked = locker_locked\r\n            if locker_password is not None:  # Vérifier si un mot de passe a été récupéré\r\n                self.lockers[i].password = locker_password  # Assigner le mot de passe au casier\r\n\r\n    def lock_locker(self, locker_number, password):\r\n        \"\"\"Verrouille un casier avec le numéro spécifié et le mot de passe fourni.\"\"\"\r\n        if locker_number in self.lockers:\r\n            message = self.lockers[locker_number].lock(password)\r\n            self.db_manager.update_locker_state(locker_number, True)\r\n            return message\r\n        else:\r\n            return \"Ce casier n'existe pas.\"\r\n\r\n    def unlock_locker(self, locker_number, password):\r\n        \"\"\"Déverrouille un casier avec le numéro spécifié et le mot de passe fourni.\"\"\"\r\n        if locker_number in self.lockers:\r\n            message = self.lockers[locker_number].unlock(password)\r\n            self.db_manager.update_locker_state(locker_number, False)\r\n            return message\r\n        else:\r\n            return \"Ce casier n'existe pas.\"\r\n\r\n    def is_locked(self, locker_number):\r\n        \"\"\"Vérifie si un casier est verrouillé.\"\"\"\r\n        if locker_number in self.lockers:\r\n            return self.lockers[locker_number].is_locked()\r\n        else:\r\n            return \"Ce casier n'existe pas.\"\r\n\r\n    def update_master_password(self, new_master_password_hash):\r\n        \"\"\"Met à jour le mot de passe maître dans le gestionnaire de base de données.\"\"\"\r\n        self.db_manager.update_master_password(new_master_password_hash)\r\n\r\n\r\nclass LockerManagerGUI:\r\n    def __init__(self, master, numb_lockers, cu48_communication=None):\r\n        \"\"\"Initialise l'interface graphique du gestionnaire de casiers.\"\"\"\r\n        self.master = master\r\n        self.num_lockers = numb_lockers\r\n        self.cu48_communication = cu48_communication\r\n        self.locker_manager = LockerManager(numb_lockers, cu48_communication)  # Passer db_file ici\r\n        self.current_password = ctk.StringVar()\r\n        self.locker_buttons = []  # Initialiser la liste locker_buttons.\r\n        self.db_manager = db_manager\r\n        self.cu48 = None\r\n\r\n        # Configuration des lignes de la grille. Ajustement automatique.\r\n        for i in range(numb_lockers):\r\n            master.grid_rowconfigure(i, weight=1)\r\n\r\n        # Configuration des colonnes de la grille\r\n        for j in range(8):  # ou tout autre nombre de colonnes que vous utilisez\r\n            master.grid_columnconfigure(j, weight=1)\r\n\r\n        # Créer les boutons des casiers et les ajouter à la liste locker_buttons\r\n        for i in range(1, numb_lockers + 1):\r\n            button = ctk.CTkButton(master, text=f\"Casier {i}\", width=120, height=45,\r\n                                   font=(\"Arial\", 20),\r\n                                   corner_radius=5,\r\n                                   border_width=5,\r\n                                   hover_color=\"grey\",\r\n                                   fg_color=\"grey\",\r\n                                   command=lambda num=i: self.toggle_locker(num))\r\n            button.grid(row=(i - 1) // 8, column=(i - 1) % 8, padx=5, pady=5)\r\n            self.locker_buttons.append(button)  # Ajouter le bouton à la liste locker_buttons.\r\n\r\n            self.update_locker_button(i)\r\n\r\n        # Crée les éléments de l'interface utilisateur\r\n        self.password_label = ctk.CTkLabel(master, height=30, text=\"Entrer un mot de passe de 4 à 8 chiffres, \"\r\n                                                                   \"\\n et sélectionner un casier:\", font=(\"Arial\", 24))\r\n        self.password_label.grid(row=(numb_lockers - 1) // 5 + 1, column=0, columnspan=4, pady=20)\r\n\r\n        self.password_entry = ctk.CTkEntry(master, show=\"*\", textvariable=self.current_password, width=200, height=40)\r\n        self.password_entry.grid(row=(numb_lockers - 1) // 5 + 2, column=0, columnspan=4, pady=5)\r\n        self.password_entry.icursor(ctk.END)  # Place le curseur à la fin du champ de mot de passe.\r\n\r\n        self.status_label = ctk.CTkLabel(master, text=\"\", width=40, height=30, font=(\"Arial\", 24))\r\n        self.status_label.grid(row=(numb_lockers - 1) // 5 + 3, columnspan=4, pady=5, sticky=\"n\")\r\n\r\n        self.keypad_frame = ctk.CTkFrame(master, fg_color=\"white\")  # Couleur de fond par défaut\r\n        self.keypad_frame.grid(row=(numb_lockers - 1) // 5 + 4, rowspan=2, column=0, columnspan=4, pady=5, sticky=\"n\")\r\n\r\n        # Ajouter le checkbox pour envoyer le mot de passe par SMS\r\n        self.send_sms_var = tk.IntVar()\r\n        self.send_sms_checkbox = ctk.CTkCheckBox(master, text=\"Envoyer le mot de passe par texto\",\r\n                                                 variable=self.send_sms_var, onvalue=True, offvalue=False,\r\n                                                 font=(\"Arial\", 24), command=self.show_phone_entry)\r\n        self.send_sms_checkbox.grid(row=(numb_lockers - 1) // 5 + 1, rowspan=2, column=4, columnspan=5, pady=20,\r\n                                    sticky=\"nw\")\r\n\r\n        # Ajouter le champ pour saisir le numéro de téléphone.\r\n        self.phone_number_label = ctk.CTkLabel(master, text=\"Numéro de téléphone:\", font=(\"Arial\", 24))\r\n        self.phone_number_label.grid(row=(numb_lockers - 1) // 5 + 1, column=4, columnspan=5, pady=0, sticky=\"sw\")\r\n        self.phone_number_var = tk.StringVar()\r\n        self.phone_number_var.trace(\"w\", lambda *args: self.format_phone_number())\r\n        self.phone_number_entry = ctk.CTkEntry(master, width=110, height=40, textvariable=self.phone_number_var)\r\n        self.phone_number_entry.grid(row=(numb_lockers - 1) // 5 + 2, column=4, columnspan=5, pady=5, sticky=\"nw\")\r\n        self.phone_number_entry.icursor(ctk.END)  # Place le curseur à la fin du champ.\r\n\r\n        # Masquer initialement le champ de numéro de téléphone\r\n        self.phone_number_label.grid_remove()\r\n        self.phone_number_entry.grid_remove()\r\n        self.selected_entry = None\r\n\r\n        # Ajouter le champ pour afficher les instructions.\r\n        self.instruction_label = ctk.CTkLabel(master, text=\"Instructions:\\n\", font=(\"Arial\", 24))\r\n        self.instruction_label.grid(row=(numb_lockers - 1) // 5 + 3, rowspan=2, column=4, columnspan=5,\r\n                                    padx=0, pady=5, sticky=\"nw\")\r\n        self.instruction_line_label = ctk.CTkLabel(master, text=\"-Pour ouvrir un casier : \\n\"\r\n                                                                \"1. À l'aide du clavier, saisissez un mot de \"\r\n                                                                \"passe de 4 à 8 chiffres.\\n\"\r\n                                                                \"2.(facultatif) Cochez la case (Envoyer le mot de \"\r\n                                                                \"passe par texto).\\n\"\r\n                                                                \"3.(facultatif) Saisissez les 10 chiffres de votre \"\r\n                                                                \"numéro de cellulaire.\\n\"\r\n                                                                \"4. Sélectionnez le casier que vous souhaitez ouvrir.\\n\"\r\n                                                                \"5. Le casier s'ouvrira automatiquement.\\n\\n\"\r\n                                                                \"-Pour déverrouiller un casier : \\n\"\r\n                                                                \"1. Saisissez le mot de passe utilisateur que vous \"\r\n                                                                \"avez choisi à l'étape 1.\\n\"\r\n                                                                \"2. Cliquez sur le casier que vous avez verrouillé.\\n\",\r\n                                                   font=(\"Arial\", 18), justify=\"left\")\r\n        self.instruction_line_label.grid(row=(numb_lockers - 1) // 5 + 4, column=4, columnspan=5, pady=0, sticky=\"nw\")\r\n\r\n        self.selected_entry = \"password\"  # Définir par défaut que le mot de passe est sélectionné\r\n        # Placer le curseur par défaut dans le champ d'entrée du mot de passe\r\n        self.password_entry.focus_set()\r\n        # Associer les événements de focus aux entrées pour mettre à jour selected_entry\r\n        self.password_entry.bind(\"<FocusIn>\", lambda event: self.set_selected_entry(\"password\"))\r\n        self.password_entry.bind(\"<FocusOut>\", lambda event: self.clear_selected_entry(\"password\"))\r\n        self.phone_number_entry.bind(\"<FocusIn>\", lambda event: self.set_selected_entry(\"phone_number\"))\r\n        self.phone_number_entry.bind(\"<FocusOut>\", lambda event: self.clear_selected_entry(\"phone_number\"))\r\n        # Expression régulière pour valider le numéro de téléphone\r\n        self.phone_regex = re.compile(r'^\\d{10}$')  # Format : 10 chiffres sans espaces ni caractères spéciaux\r\n\r\n        # Lier l'événement de saisie au champ d'entrée du numéro de téléphone\r\n        self.phone_number_entry.bind(\"<KeyRelease>\", self.validate_phone_number)\r\n\r\n        self.create_keypad()  # Création du clavier.\r\n        self.clear_status()  # Efface le champ status et écrit le mot de bienvenu.\r\n\r\n        # Créer la barre de menu.\r\n        menubar = Menu(master)\r\n\r\n        # Créer un menu cascade pour les options.\r\n        options_menu = Menu(menubar, tearoff=0)\r\n        aide_menu = Menu(menubar, tearoff=0)\r\n        menubar.add_cascade(label=\"Options\", menu=options_menu)\r\n        menubar.add_cascade(label=\"Aide\", menu=aide_menu)\r\n\r\n        # Ajouter les options de configuration au menu cascade.\r\n        options_menu.add_command(label=\"Configurer\", command=self.open_config_window, font=(\"Arial\", 14))\r\n        aide_menu.add_command(label=\"Instructions\", command=self.open_help_window, font=(\"Arial\", 14))\r\n\r\n        # Associer la barre de menu à la fenêtre principale.\r\n        master.configure(menu=menubar)\r\n\r\n    def open_config_window(self):\r\n        \"\"\"Ouvre la fenêtre de configuration.\"\"\"\r\n        try:\r\n            # Vérifier le mot de passe maître avant d'ouvrir la fenêtre de configuration.\r\n            master_password = self.locker_manager.db_manager.get_master_password()\r\n            if master_password is not None:\r\n                # Créer et afficher la fenêtre de configuration.\r\n                config_window = ctk.CTkToplevel(self.master)\r\n                config_window.title(\"Configuration\")\r\n                config_window.geometry(\"500x250\")\r\n                config_window.resizable(False, False)\r\n                config_window.state('normal')  # Mettre la fenêtre au premier plan.\r\n\r\n                config_window.grab_set()  # Empêcher l'accès à la fenêtre principale.\r\n\r\n                # Passer l'instance de LockerManagerGUI à la fenêtre de configuration.\r\n                ConfigWindow(config_window, self, master_password)\r\n            else:\r\n                messagebox.showerror(\"Erreur\", \"Impossible de récupérer le mot de passe maître.\")\r\n        except Exception as e:\r\n            messagebox.showerror(\"Erreur\", f\"Une erreur est survenue \"\r\n                                           f\"lors de l'ouverture de la fenêtre de configuration : {str(e)}\")\r\n\r\n    def open_help_window(self):\r\n        \"\"\"Ouvre une fenêtre d'aide affichant les instructions pour ouvrir et fermer un casier.\"\"\"\r\n        help_text = (\"-Pour ouvrir un casier : \\n\"\r\n                     \"1. À l'aide du pavé numérique, saisissez un mot de passe de 4 à 8 chiffres.\\n\"\r\n                     \"2. Cochez la case (Envoyer le mot de passe par texto), facultatif.\\n\"\r\n                     \"3. Saisissez les 10 chiffres de votre numéro de cellulaire, facultatif.\\n\"\r\n                     \"4. Sélectionnez le casier que vous souhaitez ouvrir.\\n\"\r\n                     \"5. Le casier s'ouvrira automatiquement.\\n\\n\"\r\n                     \"-Pour déverrouiller un casier : \\n\"\r\n                     \"1. Saisissez le mot de passe utilisateur que vous avez choisi à l'étape 1.\\n\"\r\n                     \"2. Cliquez sur le casier que vous avez verrouillé.\\n\\n\"\r\n                     )\r\n\r\n        # Créer une nouvelle fenêtre pour afficher l'aide.\r\n        help_window = ctk.CTkToplevel(self.master)\r\n        help_window.title(\"Aide\")\r\n        help_window.geometry(\"700x400\")\r\n        help_window.state('normal')\r\n\r\n        help_window.grab_set()  # Empêcher l'accès à la fenêtre principale.\r\n\r\n        # Ajouter un label avec le texte d'aide.\r\n        help_label = ctk.CTkLabel(help_window, text=help_text, justify=\"left\")\r\n        help_label.cget(\"font\").configure(size=20)\r\n        help_label.pack()\r\n\r\n        # Ajouter un bouton \"Fermer\" pour fermer la fenêtre d'aide.\r\n        close_button = ctk.CTkButton(help_window, text=\"Fermer\", command=lambda: self.close_help_window(help_window))\r\n        close_button.pack()\r\n\r\n    @staticmethod\r\n    def close_help_window(window):\r\n        \"\"\"Ferme la fenêtre d'aide.\"\"\"\r\n        window.destroy()\r\n\r\n    def update_config(self, new_master_password):\r\n        \"\"\"Met à jour la configuration avec le nouveau mot de passe maître.\"\"\"\r\n        # Mettre à jour la configuration avec le nouveau mot de passe maître\r\n        self.locker_manager.master_password = new_master_password\r\n\r\n    def toggle_locker(self, locker_number):\r\n        \"\"\"Verrouille ou déverrouille un casier en fonction de son état actuel.\"\"\"\r\n        is_locked = self.locker_manager.is_locked(locker_number)\r\n        password = self.current_password.get()\r\n\r\n        if isinstance(is_locked, bool):\r\n            \"\"\"vérifie si is_locked est de type booléen.\"\"\"\r\n            if is_locked:\r\n                # Déverrouille le casier.\r\n                message = self.locker_manager.unlock_locker(locker_number, password)\r\n                if message.startswith(\"Casier\"):\r\n                    self.update_locker_button(locker_number)\r\n                    self.update_status(message)\r\n                    # Envoyer la commande pour déverrouiller le casier.\r\n                    # Envoyer la commande pour verrouiller ou déverrouiller le casier.\r\n                    cu48_address, locker_index = self.get_cu48_address(locker_number)\r\n                    self.cu48_communication.send_command(cu48_address, locker_index, 0x51)\r\n                else:\r\n                    self.update_status(message)\r\n            else:\r\n                # Verrouille le casier.\r\n                message = self.locker_manager.lock_locker(locker_number, password)\r\n                if message.startswith(\"Casier\"):\r\n                    self.update_locker_button(locker_number)\r\n                    self.update_status(message)\r\n                    # Envoyer la commande pour verrouiller ou déverrouiller le casier.\r\n                    cu48_address, locker_index = self.get_cu48_address(locker_number)\r\n                    self.cu48_communication.send_command(cu48_address, locker_index, 0x51)\r\n                    self.send_sms()  # Envoie un sms.\r\n                    self.send_sms_checkbox.deselect()  # Décoche la case envoi par sms.\r\n                    self.show_phone_entry()  # Relance la méthode pour effacer les widgets.\r\n                else:\r\n                    self.update_status(message)\r\n        else:\r\n            # Le casier n'existe pas ou une autre erreur s'est produite.\r\n            self.update_status(is_locked)\r\n\r\n        # Effacer le champ mot de passe après avoir verrouillé ou déverrouillé un casier.\r\n        self.clear_password()\r\n        # Effacer le statut après 30 secondes.\r\n        self.master.after(30000, self.clear_status)\r\n\r\n    @staticmethod\r\n    def get_cu48_address(locker_number):\r\n        \"\"\"Retourne l'adresse du CU48 et l'emplacement de branchement du casier en fonction de son numéro.\"\"\"\r\n        if 1 <= locker_number <= 24:\r\n            return 0x00, locker_number - 1\r\n        elif 25 <= locker_number <= 48:\r\n            return 0x01, locker_number - 25\r\n        else:\r\n            return 0x02, locker_number - 49\r\n\r\n    def update_locker_button(self, locker_number):\r\n        \"\"\"Met à jour l'apparence du bouton du casier pour refléter son état.\"\"\"\r\n        locker = self.locker_manager.lockers[locker_number]\r\n        if locker.is_locked():\r\n            # Rouge si le casier est verrouillé.\r\n            self.locker_buttons[locker_number - 1].configure(fg_color=\"red\")\r\n        else:\r\n            # Vert si le casier est déverrouillé.\r\n            self.locker_buttons[locker_number - 1].configure(fg_color=\"green\")\r\n        # Mettre à jour le bouton pour refléter le changement de couleur.\r\n        self.locker_buttons[locker_number - 1].update()\r\n\r\n    def create_keypad(self):\r\n        \"\"\"Crée le pavé numérique pour entrer le mot de passe.\"\"\"\r\n        buttons = [\r\n            (\"1\", 0, 0), (\"2\", 0, 1), (\"3\", 0, 2),\r\n            (\"4\", 1, 0), (\"5\", 1, 1), (\"6\", 1, 2),\r\n            (\"7\", 2, 0), (\"8\", 2, 1), (\"9\", 2, 2),\r\n            (\"0\", 3, 1), (\"Efface\", 3, 2)\r\n        ]\r\n        for (text, row, column) in buttons:\r\n            button = ctk.CTkButton(self.keypad_frame, text=text,\r\n                                   fg_color=\"grey\",  # Couleur de fond par défaut\r\n                                   font=(\"Arial\", 24),\r\n                                   height=40,\r\n                                   width=100,\r\n                                   command=lambda t=text: self.keypad_input(t))\r\n            button.grid(row=row, column=column, padx=5, pady=5)\r\n\r\n    def set_selected_entry(self, entry_name):\r\n        \"\"\"Mettre à jour la variable selected_entry lorsqu'une entrée est sélectionnée.\"\"\"\r\n        self.selected_entry = entry_name\r\n\r\n    def clear_selected_entry(self, entry_name):\r\n        \"\"\"Effacer la variable selected_entry lorsqu'une entrée n'est plus sélectionnée.\"\"\"\r\n        if self.selected_entry == entry_name:\r\n            self.selected_entry = None\r\n\r\n    def keypad_input(self, value):\r\n        \"\"\"Gère l'entrée du pavé numérique en fonction de l'entrée sélectionnée.\"\"\"\r\n        current_value = \"\"\r\n        if self.selected_entry == \"password\":\r\n            current_value = self.current_password.get()\r\n        elif self.selected_entry == \"phone_number\":\r\n            current_value = self.phone_number_entry.get()\r\n\r\n        if value == \"Efface\":\r\n            current_value = \"\"\r\n        else:\r\n            current_value += value\r\n\r\n        if self.selected_entry == \"password\":\r\n            self.current_password.set(current_value)\r\n            self.password_entry.icursor(tk.END)  # Place le curseur à la fin du champ de mot de passe.\r\n\r\n        elif self.selected_entry == \"phone_number\":\r\n            self.phone_number_entry.delete(0, tk.END)  # Effacer le contenu actuel de l'entrée\r\n            self.phone_number_entry.insert(tk.END, current_value)  # Insérer le nouveau numéro de téléphone\r\n\r\n    def update_status(self, message):\r\n        \"\"\"Met à jour le statut (message au-dessus du clavier).\"\"\"\r\n        self.status_label.configure(text=message)\r\n\r\n    def clear_password(self):\r\n        \"\"\"Efface le champ du mot de passe.\"\"\"\r\n        self.current_password.set(\"\")  # Efface le champ mot de passe.\r\n        self.password_entry.icursor(tk.END)  # Place le curseur à la fin du champ de mot de passe\r\n\r\n    def clear_phone_number(self):\r\n        \"\"\"Efface le champ numéro de téléphone.\"\"\"\r\n        self.phone_number_entry.delete(0, tk.END)\r\n\r\n    def clear_status(self):\r\n        \"\"\"Efface le statut.\"\"\"\r\n        self.status_label.configure(text=\"Bienvenue Empire47.\")\r\n\r\n    def show_phone_entry(self):\r\n        \"\"\"Affiche le champ de numéro de téléphone si la case à cocher est cochée.\"\"\"\r\n        if self.send_sms_var.get():\r\n            self.phone_number_label.grid()\r\n            self.phone_number_entry.grid()\r\n            self.phone_number_entry.focus()\r\n        else:\r\n            self.phone_number_label.grid_remove()\r\n            self.phone_number_entry.grid_remove()\r\n            # Effacer le champ d'entrée du numéro de téléphone lorsque la case à cocher est décochée.\r\n            self.phone_number_entry.delete(0, tk.END)\r\n            # Réinitialiser la couleur de fond du champ d'entrée à sa couleur normale (noir)\r\n            self.phone_number_entry.configure(fg_color=\"white\")  # Couleur de fond normale\r\n\r\n    def validate_phone_number(self, _event):\r\n        \"\"\"Valide le numéro de téléphone lors de la saisie.\"\"\"\r\n        phone_number = self.phone_number_entry.get()\r\n\r\n        # Vérifier si le numéro de téléphone correspond à l'expression régulière\r\n        if re.match(r'^\\(\\d{3}\\)\\d{3}-\\d{4}$', phone_number):\r\n            self.phone_number_entry.configure(text_color=\"black\")  # Réinitialiser la couleur du texte\r\n            return True\r\n        else:\r\n            self.phone_number_entry.configure(fg_color=\"red\")  # Afficher en rouge si le numéro est invalide\r\n            return False\r\n\r\n    def send_sms(self):\r\n        \"\"\"Fonction pour envoyer le mot de passe par SMS.\"\"\"\r\n        # Récupérer le mot de passe actuel\r\n        current_password = self.current_password.get()\r\n\r\n        # Vérifier si l'utilisateur a coché la case pour envoyer par SMS\r\n        if self.send_sms_var.get() == 1:\r\n            # Récupérer le numéro de téléphone saisi par l'utilisateur\r\n            phone_number = self.phone_number_entry.get()\r\n\r\n            try:\r\n                # Valider le numéro de téléphone\r\n                if self.validate_phone_number(phone_number):\r\n                    # Ici, vous devriez implémenter la logique pour envoyer\r\n                    # le SMS avec le mot de passe.\r\n                    # Vous pouvez utiliser des bibliothèques Python comme\r\n                    # Twilio pour envoyer des SMS\r\n                    # Charger les variables d'environnement du fichier .env\r\n                    load_dotenv(dotenv_path='secret.env')\r\n                    # Utiliser les secrets du fichier secret.env.\r\n                    account_sid = os.getenv('ACCOUNT_SID')\r\n                    auth_token = os.getenv('AUTH_TOKEN')\r\n\r\n                    client = Client(account_sid, auth_token)\r\n\r\n                    if current_password.strip() != \"\":\r\n                        message = client.messages.create(\r\n                            from_='+15818905458',\r\n                            to='+1' + phone_number,\r\n                            body=f\"Votre mot de passe est : {current_password}\"\r\n                        )\r\n                        print(message.sid)\r\n\r\n                        # Effacer le numéro de téléphone et revenir à la saisie du mot de passe\r\n                        self.clear_phone_number()\r\n                        self.password_entry.focus()\r\n\r\n                        # Afficher une boîte de dialogue pour confirmer l'envoi du SMS\r\n                        messagebox.showinfo(\"SMS envoyé\", f\"Le mot de passe a été envoyé à {phone_number} par SMS.\")\r\n                    else:\r\n                        # Afficher un message d'erreur si le mot de passe est vide\r\n                        messagebox.showerror(\"Erreur\", \"Le mot de passe est vide. Veuillez entrer un mot de passe.\")\r\n                else:\r\n                    # Afficher un message d'erreur si le numéro de téléphone est invalide\r\n                    messagebox.showerror(\"Erreur\", \"Veuillez saisir un numéro de téléphone valide.\")\r\n            except Exception as e:\r\n                # Afficher un message d'erreur générique en cas d'erreur inattendue\r\n                messagebox.showerror(\"Erreur\", f\"Une erreur est survenue lors de l'envoi du SMS : {str(e)}\")\r\n\r\n    def format_phone_number(self):\r\n        \"\"\"Ajuste automatiquement le numéro de téléphone dans le format (123)123-1234.\"\"\"\r\n        # Récupérer le numéro de téléphone entré par l'utilisateur\r\n        phone_number = self.phone_number_var.get()\r\n\r\n        # Vérifier si le numéro de téléphone est vide\r\n\r\n        # Supprimer tous les caractères non numériques du numéro de téléphone\r\n        digits = re.sub(r\"\\D\", \"\", phone_number)\r\n\r\n        # Formater le numéro selon le format spécifié ((123)123-1234)\r\n        formatted_number = \"(\" + digits[:3] + \")\" + digits[3:6] + \"-\" + digits[6:10]\r\n\r\n        # Mettre à jour le champ de saisie du numéro de téléphone avec le numéro formaté\r\n        self.phone_number_entry.delete(0, tk.END)\r\n        self.phone_number_entry.insert(0, formatted_number)\r\n\r\n\r\n# Donne le nombre de casiers à créer.\r\nnum_lockers = 48\r\n\r\n# Crée une instance principale de l'interface graphique Tkinter.\r\nroot = ctk.CTk()\r\nroot.title(\"Gestion des Casiers\")\r\nroot.configure(background=\"white\")  # couleur de fond\r\n\r\n# Crée une instance de DatabaseManager pour gérer la base de données.\r\ndb_manager = DatabaseManager('data/database.db')\r\n\r\n# Crée une instance de CU48Communication pour gérer la communication avec le CU48.\r\n# Remarque : status_label=None signifie que le label d'état n'est pas utilisé dans cet exemple\r\ncu48 = CU48Communication(status_label=None)\r\n\r\n# Crée une instance de LockerManagerGUI en passant les éléments nécessaires comme arguments.\r\n# - root : la fenêtre principale Tkinter.\r\n# - num_lockers : le nombre de casiers.\r\n# - cu48 : l'instance de CU48Communication pour la communication avec le CU48.\r\napp = LockerManagerGUI(root, num_lockers, cu48)\r\n\r\n# Lance la boucle principale de l'interface graphique Tkinter, qui gère les événements et les interactions utilisateur.\r\nroot.mainloop()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 434eb93759219b60f99b773ecb061b62a24ba31b)
+++ b/main.py	(date 1715609602869)
@@ -520,6 +520,11 @@
         self.phone_number_entry.insert(0, formatted_number)
 
 
+# Fonction à exécuter pour quitter l'application
+def quitter_application(event=None):
+    root.destroy()
+
+
 # Donne le nombre de casiers à créer.
 num_lockers = 48
 
@@ -527,6 +532,17 @@
 root = ctk.CTk()
 root.title("Gestion des Casiers")
 root.configure(background="white")  # couleur de fond
+# Définition de la résolution de l'écran
+largeur_screen = root.winfo_screenwidth()
+hauteur_screen = root.winfo_screenheight()
+# Définition des dimensions de la fenêtre
+root.geometry(f"{largeur_screen}x{hauteur_screen}")
+print("Écran", largeur_screen, hauteur_screen)
+# Affichage de la fenêtre en plein écran.
+root.attributes("-fullscreen", True)  # Enlève le X pour pouvoir fermer la fenêtre.
+# Lier la touche "Echap" pour quitter l'application.
+root.bind("<Escape>", quitter_application)
+
 
 # Crée une instance de DatabaseManager pour gérer la base de données.
 db_manager = DatabaseManager('data/database.db')
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"77e92ebd-f95d-490d-b0e5-ef0e8578b2a9\" name=\"Changes\" comment=\"Séparation du code en fichier.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/database.db\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data/database.db\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"DaemonCodeAnalyzer\">\r\n    <disable_hints>\r\n      <file url=\"file://$PROJECT_DIR$/main.py\" />\r\n    </disable_hints>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Merge.Settings\">\r\n    <option name=\"BRANCH\" value=\"origin/master\" />\r\n  </component>\r\n  <component name=\"Git.Rebase.Settings\">\r\n    <option name=\"NEW_BASE\" value=\"EnvoieSMS\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"EnvoieSMS\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"PREVIEW_PUSH_PROTECTED_ONLY\" value=\"true\" />\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--follow-tags\" />\r\n        <option name=\"title\" value=\"Current Branch\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"EnvoieSMS\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"SWAP_SIDES_IN_COMPARE_BRANCHES\" value=\"true\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;history&quot;: [\r\n    {\r\n      &quot;searchQuery&quot;: &quot;boudha25&quot;,\r\n      &quot;state&quot;: &quot;OPEN&quot;,\r\n      &quot;assignee&quot;: &quot;Boudha25&quot;\r\n    }\r\n  ],\r\n  &quot;lastFilter&quot;: {}\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Boudha25/CasierIntelligent.git&quot;,\r\n    &quot;accountId&quot;: &quot;ebdb8367-267e-44af-8378-f7fd3c34a1b5&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ejgEidhlhEV29TxKn4QrSDUkPL\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"Python tests.Python tests in test_locker_manager.py.executor\": \"Run\",\r\n    \"Python.CU48.executor\": \"Run\",\r\n    \"Python.main.executor\": \"Run\",\r\n    \"Python.test_locker_manager.executor\": \"Run\",\r\n    \"git-widget-placeholder\": \"SéparationFichier\",\r\n    \"last_opened_file_path\": \"C:/Users/Utilisateur/Google Drive/Documents de Stéphane/Projet/Python/CasierIntelligent/.gitignore\",\r\n    \"run.code.analysis.last.selected.profile\": \"pProject Default\",\r\n    \"settings.editor.selected.configurable\": \"settings.json.schema.catalog\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Utilisateur\\Google Drive\\Documents de Stéphane\\Projet\\Python\\Bibliotheque\\venv\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"CasierIntelligent\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-0509580d9d50-746f403e7f0c-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-241.14494.241\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"77e92ebd-f95d-490d-b0e5-ef0e8578b2a9\" name=\"Changes\" comment=\"\" />\r\n      <created>1712423292146</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1712423292146</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Premier commit\">\r\n      <created>1712434088777</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712434088777</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Premier commit\">\r\n      <created>1712502741302</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712502741302</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Premier commit\">\r\n      <created>1712503056130</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712503056130</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Changement de couleur de fond des boutons\">\r\n      <created>1712504916513</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712504916513</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Maintenant, le curseur se place automatiquement à la fin du champ de mot de passe à chaque saisie, et le focus reste dans le champ de mot de passe pour faciliter la saisie.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712508201385</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712508201385</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Ajour d'un mot de passe maitre.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712704893333</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712704893333</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Correction de nom de variable num_lockers pour numb_lockers\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713017229404</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713017229404</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Amélioration majeure de l'apparence à l'aide de CustomTkinter.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713043660559</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713043660559</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Amélioration majeure de l'apparence à l'aide de CustomTkinter.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713043748015</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713043748015</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Amélioration majeure de l'apparence à l'aide de CustomTkinter.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713043806450</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713043806450</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Ajout de la classe CU48Communication.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713496736996</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713496736996</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Ajout de la méthode def get_locker_status dans la classe CU48Communication.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713613270660</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713613270660</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Ajout de la méthode update_status dans la classe CU48Communication pour afficher les print dans le status_label.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713701850868</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713701850868</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Ajout de communication lors du déverrouillage des serrures. Lors de ce commit, le déverrouillage des serrures fonctionne.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714092788450</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714092788450</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Communication unidirectionnelle, du logiciel vers le CU48 pour le déverrouillage.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714337649015</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714337649015</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Ajout d'une base de donnée pour enregistrer l'état et les mot de passes des casiers en cas de panne de courant.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714446565594</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714446565594</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Ajout d'une base de donnée pour enregistrer l'état et les mot de passes des casiers en cas de panne de courant.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714446840894</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714446840894</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Ajout d'une base de donnée pour enregistrer l'état et les mot de passes des casiers en cas de panne de courant.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714615474839</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714615474839</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Ajout de conditions try except pour renforcer le code et sécurisation du mot de passe maitre.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714615546879</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714615546879</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Ajout de module CU48.  Les casiers sont ouvert en fonction de leur emplacement sur le CU48. Ajout de la méthode get_cu48_address qui détermine quel casier va sur quel CU48.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714964426611</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714964426611</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Amélioration de l'apparence avec Customtkinter.  Amélioration des fenêtres TopLevel.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714998459097</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714998459097</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Amélioration de l'apparence avec Customtkinter.  Amélioration des fenêtres TopLevel.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715125521138</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715125521139</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\" Ajout de la fonctionnalité d'envoi du mot de passe par SMS. J'ai retiré aussi la classe DatabaseManager du fichier Main pour la mettre dans un autre fichier Database.py.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715308158286</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715308158286</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\" Ajout de la fonctionnalité d'envoi du mot de passe par SMS. J'ai retiré aussi la classe DatabaseManager du fichier Main pour la mettre dans un autre fichier Database.py.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715308493457</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715308493457</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\" Ajout de la fonctionnalité d'envoi du mot de passe par SMS. J'ai retiré aussi la classe DatabaseManager du fichier Main pour la mettre dans un autre fichier Database.py.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715308825184</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715308825184</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\" Ajout de la fonctionnalité d'envoi du mot de passe par SMS. J'ai retiré aussi la classe DatabaseManager du fichier Main pour la mettre dans un autre fichier Database.py.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715309852215</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715309852215</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\" Ajout de la fonctionnalité d'envoi du mot de passe par SMS. J'ai retiré aussi la classe DatabaseManager du fichier Main pour la mettre dans un autre fichier Database.py.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715309884457</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715309884457</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\" Ajout de la fonctionnalité d'envoi du mot de passe par SMS. J'ai retiré aussi la classe DatabaseManager du fichier Main pour la mettre dans un autre fichier Database.py.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715459706672</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715459706672</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"Mot de passe par SMS fonctionne.  Les secrets sont dans le fichier secret.env qui est dans le .getignore.  Prêt à être livré.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715547383291</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715547383291</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"Séparation du code en fichier.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715548627598</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715548627598</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"Séparation du code en fichier.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715548667400</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715548667400</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"32\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"RECENT_FILTERS\">\r\n      <map>\r\n        <entry key=\"Branch\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"HEAD\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/CommunicationRS485\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n              <option name=\"HIGHLIGHTERS\">\r\n                <map>\r\n                  <entry key=\"MERGE_COMMITS\" value=\"true\" />\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Premier commit\" />\r\n    <MESSAGE value=\"Changement de couleur de fond des boutons\" />\r\n    <MESSAGE value=\"Maintenant, le curseur se place automatiquement à la fin du champ de mot de passe à chaque saisie, et le focus reste dans le champ de mot de passe pour faciliter la saisie.\" />\r\n    <MESSAGE value=\"Ajour d'un mot de passe maitre.\" />\r\n    <MESSAGE value=\"Correction de nom de variable num_lockers pour numb_lockers\" />\r\n    <MESSAGE value=\"Amélioration majeure de l'apparence à l'aide de CustomTkinter.\" />\r\n    <MESSAGE value=\"Ajout de la classe CU48Communication.\" />\r\n    <MESSAGE value=\"Ajout de la méthode def get_locker_status dans la classe CU48Communication.\" />\r\n    <MESSAGE value=\"Ajout de la méthode update_status dans la classe CU48Communication pour afficher les print dans le status_label.\" />\r\n    <MESSAGE value=\"Ajout de communication lors du déverrouillage des serrures. Lors de ce commit, le déverrouillage des serrures fonctionne.\" />\r\n    <MESSAGE value=\"Communication unidirectionnelle, du logiciel vers le CU48 pour le déverrouillage.\" />\r\n    <MESSAGE value=\"Ajout d'une base de donnée pour enregistrer l'état et les mot de passes des casiers en cas de panne de courant.\" />\r\n    <MESSAGE value=\"Ajout de conditions try except pour renforcer le code et sécurisation du mot de passe maitre.\" />\r\n    <MESSAGE value=\"Ajout de module CU48.  Les casiers sont ouvert en fonction de leur emplacement sur le CU48. Ajout de la méthode get_cu48_address qui détermine quel casier va sur quel CU48.\" />\r\n    <MESSAGE value=\"Amélioration de l'apparence avec Customtkinter.  Amélioration des fenêtres TopLevel.\" />\r\n    <MESSAGE value=\" Ajout de la fonctionnalité d'envoi du mot de passe par SMS. J'ai retiré aussi la classe DatabaseManager du fichier Main pour la mettre dans un autre fichier Database.py.\" />\r\n    <MESSAGE value=\"Mot de passe par SMS fonctionne.  Les secrets sont dans le fichier secret.env qui est dans le .getignore.  Prêt à être livré.\" />\r\n    <MESSAGE value=\"Séparation du code en fichier.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Séparation du code en fichier.\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 434eb93759219b60f99b773ecb061b62a24ba31b)
+++ b/.idea/workspace.xml	(date 1715609138541)
@@ -4,9 +4,8 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="77e92ebd-f95d-490d-b0e5-ef0e8578b2a9" name="Changes" comment="Séparation du code en fichier.">
+    <list default="true" id="77e92ebd-f95d-490d-b0e5-ef0e8578b2a9" name="Changes" comment="Séparation et création du fichier Cu48Communication.py. Prêt à être livré.">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/data/database.db" beforeDir="false" afterPath="$PROJECT_DIR$/data/database.db" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -400,7 +399,23 @@
       <option name="project" value="LOCAL" />
       <updated>1715548667400</updated>
     </task>
-    <option name="localTasksCounter" value="32" />
+    <task id="LOCAL-00032" summary="Amélioration du positionnement des Widgets.">
+      <option name="closed" value="true" />
+      <created>1715603783427</created>
+      <option name="number" value="00032" />
+      <option name="presentableId" value="LOCAL-00032" />
+      <option name="project" value="LOCAL" />
+      <updated>1715603783427</updated>
+    </task>
+    <task id="LOCAL-00033" summary="Séparation et création du fichier Cu48Communication.py. Prêt à être livré.">
+      <option name="closed" value="true" />
+      <created>1715604051343</created>
+      <option name="number" value="00033" />
+      <option name="presentableId" value="LOCAL-00033" />
+      <option name="project" value="LOCAL" />
+      <updated>1715604051343</updated>
+    </task>
+    <option name="localTasksCounter" value="34" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -465,6 +480,8 @@
     <MESSAGE value=" Ajout de la fonctionnalité d'envoi du mot de passe par SMS. J'ai retiré aussi la classe DatabaseManager du fichier Main pour la mettre dans un autre fichier Database.py." />
     <MESSAGE value="Mot de passe par SMS fonctionne.  Les secrets sont dans le fichier secret.env qui est dans le .getignore.  Prêt à être livré." />
     <MESSAGE value="Séparation du code en fichier." />
-    <option name="LAST_COMMIT_MESSAGE" value="Séparation du code en fichier." />
+    <MESSAGE value="Amélioration du positionnement des Widgets." />
+    <MESSAGE value="Séparation et création du fichier Cu48Communication.py. Prêt à être livré." />
+    <option name="LAST_COMMIT_MESSAGE" value="Séparation et création du fichier Cu48Communication.py. Prêt à être livré." />
   </component>
 </project>
\ No newline at end of file
